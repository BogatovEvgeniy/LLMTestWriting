##Simple
Provide me a set of unit test for the provided codebase

##Prompt_QA_Detailed_Focused
Act like a software quality engineer
Write unit test for the provided class
Make sure AAA (Arrange-Act-Assert) pattern is applied
Make sure the Edge cases are covered (zero, negative tests, empty, null, large values)
Make sure the equivalence partitioning is covered
Make sure the boundary value analysis is covered

##Prompt_DEV_Detailed_Focused
Act like a developer
Write unit test for the provided class
Make sure AAA (Arrange-Act-Assert) pattern is applied
Make sure the Edge cases are covered (zero, negative tests, empty, null, large values)
Make sure the equivalence partitioning is covered
Make sure the boundary value analysis is covered


Be focused
Be creative

##LikeQA
Provide me a set of unit test for the provided codebase
Think like QA

##LikeDEV
Provide me a set of unit test for the provided codebase
Think like QA


##Prompt with context
As a retail store manager, I need an automated way to calculate customer discounts for our loyalty program to ensure consistent discount application and increase customer satisfaction.

Business Context:
- Our store has noticed that large orders (₹1000+) are becoming more common
- We want to encourage medium-sized purchases (₹500-999) to compete with online retailers
- Customer feedback shows that predictable discounts increase repeat purchases

Acceptance Criteria:
- Apply 20% discount for purchases of ₹1000 or more to reward big spenders
- Apply 10% discount for purchases between ₹500-999 to encourage medium-sized purchases
- No discount for purchases below ₹500
- System must validate that purchase amounts are not negative
- Discounts should be calculated instantly at checkout

Technical Notes:
- Function should accept purchase amount as integer input
- Function should return discount percentage as integer
- Input validation should throw clear error message for negative amounts
- Implementation should be efficient for high-volume processing
Provide me a set of unit test for the provided codebase